plugins {
    id 'application'
    id 'eclipse'
    id 'maven-publish'
    id 'checkstyle'
}

group = 'ai.keeneye'
version = '0.3.1-SNAPSHOT'

mainClassName = 'ai.keeneye.bioformats2n5.Converter'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'https://artifacts.glencoesoftware.com/artifactory/ome.releases'
    }
    maven {
        url 'https://repo.glencoesoftware.com/repository/n5-zarr-snapshots/'
    }
    maven {
        url 'https://repo.glencoesoftware.com/repository/jzarr-snapshots'
    }
    maven {
        url 'https://maven.scijava.org/content/groups/public'
    }
    maven {
        url 'https://nexus.senbox.net/nexus/content/groups/public'
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'minutes'
    exclude group: 'edu.ucar', 'module': 'cdm'
}

dependencies {
    implementation 'ome:formats-gpl:6.7.0'
    implementation 'info.picocli:picocli:4.2.0'
    implementation 'com.univocity:univocity-parsers:2.8.4'
    implementation 'com.bc.zarr:jzarr:0.3.3-gs-SNAPSHOT'
    implementation 'org.janelia.saalfeldlab:n5:2.2.0'

    // exclude JUnit 4 to make sure our tests all use JUnit 5
    implementation('org.janelia.saalfeldlab:n5-blosc:1.1.0') {
        exclude group: 'junit', module: 'junit'
    }
    implementation('org.janelia.saalfeldlab:n5-zarr:0.0.4') {
        exclude group: 'junit', module: 'junit'
    }

    implementation 'org.openpnp:opencv:3.4.2-1'
    implementation 'me.tongfei:progressbar:0.9.0'

    // https://github.com/junit-team/junit5-samples/blob/master/junit5-migration-gradle/build.gradle
    def junitVintageVersion  = '5.7.0'
    def junitJupiterVersion  = '5.7.0'
    def junitPlatformVersion = '1.7.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"

    // https://stackoverflow.com/questions/45462987/junit5-with-intellij-and-gradle
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
}

jar {
    manifest {
        attributes(
            "Main-Class": mainClassName,
            "Implementation-Version": version
        )
    }
}

test {
    useJUnitPlatform()
}

distributions {
    main {
        contents {
            from("$projectDir") {
                include 'README.md'
                include 'LICENSE.txt'
            }
        }
    }
}

checkstyle {
    toolVersion = "8.26"
}
